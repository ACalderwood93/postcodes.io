extends ../layouts/default

block main
	.sub-header
		.container
			.row
				.col-lg-12
					h1.mast-text Documentation

block content
	.container
			.row
				.col-md-9.documentation
					h2#Overview.doc-header Overview

					h4 Postcodes.io is a free Postcode lookup API and geocoder for the UK

					h3#Endpoint Endpoint

					p All services can be accessed from the following HTTP[S] endpoint

					pre
						h4 https://api.postcodes.io

					h3#Responses Responses
					p JSON(P) only. CORS is enabled.

					p Each response comes with an appropriate HTTP Status code (except for JSONP requests). These include 200 for success, 400 for bad request, 404 for not found and 500 for server error. The HTTP Status code is also included in the response body.

					h3#Authentication Authentication

					p Postcodes.io does not require any authentication.

					h3#Error-Handling Error Handling

					p To check for errors, examine the HTTP response code. 200 response indicates success while any other code will provide important information about why an error occured. 

					p Alternatively, you can examine status code in the 'status' property in the result body.

					p All JSONP requests return 200 responses because of silent errors. When using JSONP, be sure to use the latter method to check for errors.

					h3#JSONP JSONP

					p JSONP requests are supported. Simply appended the URI with a callback name. E.g.

					pre
						h4 https://api.postcodes.io/postcodes/GU50BD?callback=foo

					h3#Versioning Versioning

					p The API currently does not use any form of versioning. Any changes to the API will be backwards-compatible, this includes: adding new properties to responses, adding new endpoints, adding new optional request parameters and changing the order of properties.

					p If we make backwards-incompatible changes in the future, this will be released under a versioned endpoint.

					h3#Data Available Data Fields

					table.table.table-hover
						thead
							tr
								th Field
								th Description
						tbody
							tr#postcode
								td postcode
								td 
									strong Postcode. 
									| All current (‘live’) postcodes within the United Kingdom, the Channel Islands and the Isle of Man, received monthly from Royal Mail. 2, 3 or 4-character outward code, single space and 3-character inward code.
							tr#quality
								td quality
								td 
									strong Positional Quality. 
									| Shows the status of the assigned grid reference.
									ul
										li 1 = within the building of the matched address closest to the postcode mean
										li 2 = as for status value 1, except by visual inspection of Landline maps (Scotland only)
										li 3 = approximate to within 50m
										li 4 = postcode unit mean (mean of matched addresses with the same postcode, but not snapped to a building)
										li 5 = imputed by ONS, by reference to surrounding postcode grid references 
										li 6 = postcode sector mean, (mainly	| PO Boxes)
										li 8 = postcode terminated prior to Gridlink® initiative, last known ONS postcode grid reference1
										li 9 = no grid reference available
							tr#eastings
								td eastings
								td 
									strong Eastings. 
									| The Ordnance Survey postcode grid reference Easting to 1 metre resolution; blank for postcodes in the Channel Islands and the Isle of Man. Grid references for postcodes in Northern Ireland relate to the Irish Grid system.
							tr#northings
								td northings
								td 
									strong Northings. 
									| The Ordnance Survey postcode grid reference Northing to 1 metre resolution; blank for postcodes in the Channel Islands and the Isle of Man. Grid references for postcodes in Northern Ireland relate to the Irish Grid system.
							tr#country
								td country
								td 
									strong Country. 
									| The code for the appropriate country (i.e. one of the four constituent countries of the United Kingdom or the Channel Islands or the Isle of Man) to which each postcode is assigned.
							tr#nhs_ha
								td nhs_ha
								td 
									strong Strategic Health Authority. 
									| The health area code for the postcode.
							tr#admin_county
								td admin_county
								td 
									strong County. 
									| The current county to which the postcode has been assigned.
							tr#admin_district
								td admin_district
								td 
									strong District.
									| The current district/unitary authority to which the postcode has been assigned.
							tr#admin_ward
								td admin_ward
								td 
									strong Ward. 
									| The current administrative/electoral area to which the postcode has been assigned.
							tr#longitude
								td longitude
								td
									strong Longitude. 
									| The WGS84 longitude given the Postcode's national grid reference
							tr#latitude
								td latitude
								td
									strong Latitude. 
									| The WGS84 latitude given the Postcode's national grid reference
							tr#parliamentary_constituency
								td parliamentary_constituency
								td 
									strong Westminster Parliamentary Constituency. 
									| The Westminster Parliamentary Constituency code for each postcode.
							tr#european_electoral_region
								td european_electoral_region
								td
									strong European Electoral Region (EER). 
									| The European Electoral Region code for each postcode.
							tr#primary_care_trust
								td primary_care_trust
								td
									strong Primary Care Trust (PCT). 
									| The code for the Primary Care areas in England, LHBs in Wales, CHPs in Scotland, LCG in Northern Ireland and PHD in the Isle of Man; there are no equivalent areas in the Channel Islands. Care Trust/ Care Trust Plus (CT)/ local health board (LHB)/ community health partnership (CHP)/ local commissioning group (LCG)/ primary healthcare directorate (PHD).
							tr#region
								td region
								td
									strong Region (formerly GOR). 
									| The Region code for each postcode. The nine GORs were abolished on 1 April 2011 and are now known as ‘Regions’. They were the primary statistical subdivisions of England and also the areas in which the Government Offices for the Regions fulfilled their role. Each GOR covered a number of local authorities.
							tr#parish
								td parish
								td
									strong Parish (England)/ community (Wales).
									| The smallest type of administrative area in England is the parish (also known as 'civil parish'); the equivalent units in Wales are communities. 
							tr#lsoa
								td lsoa
								td
									strong 2011Census lower layer super output area (LSOA). 
									| The 2011 Census lower layer SOA code for England and Wales, SOA code for Northern Ireland and data zone code for Scotland.
							tr#msoa
								td msoa
								td
									strong 2011 Census middle layer super output area (MSOA). 
									| The 2011 Census middle layer SOA (MSOA) code for England and Wales and intermediate zone for Scotland.
							tr#ccg
								td ccg
								td
									strong Clinical Commissioning Group. 
									| Clinical commissioning groups (CCGs) are NHS organisations set up by the Health and Social Care Act 2012 to organise the delivery of NHS services in England.
							tr#nuts
								td nuts
								td 
									strong Nomenclature of Units for Territorial Statistics (NUTS) / Local Administrative Units (LAU) areas. 
									| The LAU2 code for each postcode. NUTS is a hierarchical classification of spatial units that provides a breakdown of the European Union’s territory for producing regional statistics which are comparable across the Union. The NUTS area classification in the United Kingdom comprises current national administrative and electoral areas, except in Scotland where some NUTS areas comprise whole and/or part Local Enterprise Regions. NUTS levels 1-3 are frozen for a minimum of three years and NUTS levels 4 and 5 are now local Administrative Units (LAU) levels 1 and 2 respectively.
							tr#codes
								td codes
								td 
									strong Returns an ID or Code associated with the postcode. 
									| Typically these are a 9 character code known as an ONS Code or GSS Code. This is currently only available for districts, parishes, counties, CCGs, NUTS and wards.


					h2#Methods.doc-header Methods

					h4 The following is a list of available API methods


					h3#Postcode-Lookup Postcode Lookup

					p Lookup a postcode. Returns all available data if found. Returns 404 if postcode does not exist.
					pre
						h4 https://api.postcodes.io/postcodes/:postcode

					h3#Bulk-Postcode-Lookup Bulk Postcode Lookup

					p Accepts a JSON object containing an array of postcodes. Returns a list of matching postcodes and respective available data.

					p Accepts up to 100 postcodes.

					pre
						h4
							.http-method POST
							| https://api.postcodes.io/postcodes?q=[postcode]

					h4 Post Data

					p This method requires a JSON object containing an array of postcodes to be posted. E.g.

					pre
						| {
						|   "postcodes" : ["PR3 0SG", "M45 6GN", "EX165BL"]
						| }


					h3#Geocode-Postcode Reverse Geocoding

					p Returns nearest postcodes for a given longitude and latitude.

					pre
						h4 
							.http-method GET 
							| https://api.postcodes.io/postcodes?lon=:longitude&amp;lat=:latitude

					h4 Optional Query Parameters
					p
						code limit=
						|  (not required) Limits number of postcodes matches to return. Defaults to 10. Needs to be less than 100.
					p
						code radius=
						|  (not required) Limits number of postcodes matches to return. Defaults to 100m. Needs to be less than 2,000m.
					p
						code wideSearch=
						|  (not required) Search up to 20km radius, but subject to a maximum of 10 results. Since lookups over a wide area can be very expensive, we've created this method to allow you choose to make the trade off between search radius and number of results. Defaults to false. When enabled, radius and limits over 10 are ignored.

					h4 Legacy

					p Note that the old style of reverse geocoding (including optional headers above) will still be supported. Namely,

					pre
						h4 
							.http-method GET 
							| https://api.postcodes.io/postcodes/lon/:longitude/lat/:latitude

					h3#Bulk-Geocode-Postcode Outcode Reverse Geocoding

					p Bulk translates into geolocations into Postcodes. Accepts up to 100 geolocations.

					pre
						h4 
							.http-method POST 
							| https://api.postcodes.io/postcodes

					h4 Post Data

					p This method requires a JSON object containing an array of geolocation objects to be POSTed. Each geolocation object accepts an optional radius (meters) and limit argument. Both default to 100m and 10 respectively. It also accepts a wideSearch argument. E.g.

					pre
						| {
						|   "geolocations" : [{
						|   	"longitude" : -3.15807731271522,
						|   	"latitude" : 51.4799900627036
						|   },{
						| 		"longitude" : -1.12935802905177,
						|   	"latitude" : 50.7186356978817,
						|   	"limit" : 100,
						|   	"radius" : 500
						|   }]
						| }

					h3#Postcode-Query Postcode Query

					p Submit a postcode query and receive a complete list of postcode matches and all associated postcode data.
					pre
						h4 
							.http-method GET 
							| https://api.postcodes.io/postcodes?q=[query]

					h4 Optional Query Parameters
					p 
						code query=
						|  (not required) aliases to 
						code q=
					p
						code limit=
						|  (not required) Limits number of postcodes matches to return. Defaults to 10. Needs to be less than 100.


					h3#Postcode-Validation Postcode Validation

					p Convenience method to validate a postcode. Returns true or false (meaning valid or invalid respectively)

					pre
						h4 
							.http-method GET 
							| https://api.postcodes.io/postcodes/:postcode/validate

					h3#Nearest-Postcode Nearest Postcode

					p Returns nearest postcodes for a given postcode.

					pre
						h4 
							.http-method GET 
							| https://api.postcodes.io/postcodes/:postcode/nearest

					h4 Optional Query Parameters
					p
						code limit=
						|  (not required) Limits number of postcodes matches to return. Defaults to 10. Needs to be less than 100.
					p
						code radius=
						|  (not required) Limits number of postcodes matches to return. Defaults to 100m. Needs to be less than 2,000m.

					h3#Postcode-Autocomplete Postcode Autocomplete

					p Convenience method to return an list of matching postcodes.

					pre
						h4 
							.http-method GET 
							| https://api.postcodes.io/postcodes/:postcode/autocomplete

					h4 Optional Query Parameters
					p
						code limit=
						|  (not required) Limits number of postcodes matches to return. Defaults to 10. Needs to be less than 100.


					h3#Random-Postcode Random Postcode

					p Returns a random postcode and all available data for that postcode.

					pre
						h4 
							.http-method GET 
							| https://api.postcodes.io/random/postcodes

					h3#Show-Outcode Outward Code Lookup

					p Geolocation data for the centroid of the outward code specified. The outward code represents the first half of any postcode (separated by a space).

					pre
						h4 
							.http-method GET 
							| https://api.postcodes.io/outcodes/:outcode

					h3#Geocode-Outcode Outcode Reverse Geocoding

					p Returns nearest outcodes for a given longitude and latitude.

					pre
						h4 
							.http-method GET 
							| https://api.postcodes.io/outcodes?lon=:longitude&amp;lat=:latitude

					h4 Optional Query Parameters
					p
						code limit=
						|  (not required) Limits number of postcodes matches to return. Defaults to 10. Needs to be less than 100.
					p
						code radius=
						|  (not required) Limits number of postcodes matches to return. Defaults to 5,000m. Needs to be less than 25,000m.

					h3#Nearest-Outcode Nearest Outcode

					p Returns nearest outcodes for a given outcode.

					pre
						h4 
							.http-method GET 
							| https://api.postcodes.io/outcodes/:outcode/nearest

					h4 Optional Query Parameters
					p
						code limit=
						|  (not required) Limits number of postcodes matches to return. Defaults to 10. Needs to be less than 100.
					p
						code radius=
						|  (not required) Limits number of postcodes matches to return. Defaults to 5,000m. Needs to be less than 25,000m.

					h2#Install-notes.doc-header Install Notes

					p There may be occasions where you want to host postcodes.io yourself. We've laid out instructions below on how to do this.

					p Installing Postcodes.io is matter of cloning the source. For example,

					pre
						h4 $ git clone https://github.com/ideal-postcodes/postcodes.io.git

					p The tricky part is importing the data. We currently provide 3 methods.

					ol
						li The easiest is to use our install script. This will require postgres superuser privileges to create and provision your database. It will then download the database and import the data from a pg_dump (hosted and created by us).
						li You can download the pg_dump and attempt to import the database yourself with psql or pg_restore. 
						li Lastly, you can retrieve the raw CSV data from the ONS and import it with our import script.

					p The entire process should take around 10 minutes even on a virtual, low-spec, single core system.

					h3#install-requirements Requirements

					ul
						li 
							a(href="http://nodejs.org") Node.js
						li 
							a(href="http://postgis.net/install/") Postgresql and Postgis

					h3#data-download Data Download

					p Data is sourced and can be downloaded from the 
						a(href="https://geoportal.statistics.gov.uk/geoportal/catalog/main/home.page") Office for National Statistics Data Portal. 
						| The dataset is often not easy to find. The simplest way is to search for "Postcode Directory".

					p Alternatively you can download a 
						a(href="http://www.postgresql.org/docs/9.3/static/app-pgdump.html") pg_dump 
						| of the postcode database which is hosted by us. This is the same dump which is used by the install script. The link to the latest dump can be found in our 
						a(href="https://github.com/ideal-postcodes/postcodes.io/blob/master/latest") repository.

					h3#install-script Install Script

					p Currently the install process targets *nix systems. We've provisioned and tested on OS X Mavericks &amp; Ubuntu 14.04. Please 
						a(href="/about") let us know
						|  if you have issues on other operating systems.

					p Postcodes.io is packaged with a 
						a(href="https://github.com/ideal-postcodes/postcodes.io/blob/master/bin/setup.sh") script 
						| to provision postgres and download a dump (pg_dump) of the ONS Postcode Directory (hosted by us). The script will do the following,
					ul
						li Prompt you for your postgres superuser credentials (most of the setup steps require this level of privilege)
						li Create a new user "postcodesio"
						li Create a new database "postcodesiodb" owned by "postcodesio"
						li Create the necessary extensions on "postcodesiodb"
						li Download, unzip and stream the Postcode directory into Postgres

					p To run,

					pre
						h4 $ npm run setup

					h3#import-from-pgdump Manual Installation from our pg_dump

					p To setup the database from our pg_dump simply download, gunzip and use either psql or pg_restore to import the data into Postgresql.

					p For example,

					pre
						h4 $ cat postcodeiodb.sql | psql postcodesiodb

					h3#import-from-ons Manual Installation from ONS Postcode Directory

					p Download the latest Office for National Statistic's "Postcode Lookup Dataset". Unzip the data locally. Navigate to postcodes.io/, link the install script ($npm link) and run the import script ($ onsImport) passing the path to the CSV data.

					p It should look something like this,

					pre
						h4 $ onsImport /path/to/data/ONSPD/Data/data.csv